name: Deploy
on: 
  push:
    branches:
      - "menta" 
jobs:
  # Test:
  #     runs-on: ubuntu-latest
  #     # Service containers to run with `container-job`
  #     services:
  #       # Label used to access the service container
  #       postgres:
  #         # Docker Hub image
  #         image: postgres
  #         # Provide the password for postgres
  #         env:
  #           POSTGRES_USER: postgres
  #           POSTGRES_PASSWORD: postgres
  #         options: >-
  #           --health-cmd pg_isready
  #           --health-interval 10s
  #           --health-timeout 5s
  #           --health-retries 5
  #         ports: 
  #           - 5432:5432
  #     env:
  #       DATABASE_URL: postgresql://postgres:postgres@localhost:5432/grading-app
  #     steps:
  #       - uses: actions/checkout@v3
  #       - name: Se define la version de node
  #         uses: actions/setup-node@v3
  #         with:
  #           node-version: 18 
  #       - run: npm install
  #       - run: npm ci
  #       # run the migration in the test database
  #       - run: npm run db:push
  #       - run: npm run datos
  #       - run: npm run test

  # Build:
  #   runs-on: ubuntu-latest 
  #   needs: Test
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: npm install
  #     - run: npm ci
  #     - name: Run production migration
  #       run: npm run migrate:deploy
  #       env:
  #         DATABASE_URL: postgresql://${{secrets.DB_NAME_MENTA}}:${{secrets.DB_PASSWORD_MENTA}}@${{secrets.HOST_MENTA}}:${{secrets.DB_PORT_MENTA}}/${{secrets.DB_NAME_MENTA}}?schema=public

  Deploy:
    runs-on: ubuntu-latest
    # needs: Build
    steps:
      - name: Despliegue en Droplet de DigitalOcean
        uses: appleboy/ssh-action@master 
        with:
          host: ${{secrets.HOST_MENTA}}
          username: ${{secrets.USERNAME_MENTA}}
          key: ${{secrets.SSH_KEY_MENTA}}
          passphrase: "1234"
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd /var/www/api.menta-e.com/html
            git pull
            sudo rm -r .env 
            echo "Configuran Variables en ENV"  
            sudo echo "JWT_SECRET=${{secrets.JWT_SECRET_MENTA}}" >> .env
            sudo echo "DB_PASSWORD=${{secrets.DB_PASSWORD_MENTA}}" >> .env
            sudo echo "DB_NAME=${{secrets.DB_NAME_MENTA}}" >> .env
            sudo echo "DB_HOST=${{secrets.DB_HOST_MENTA}}" >> .env
            sudo echo "DB_PORT=${{secrets.DB_PORT_MENTA}}" >> .env
            sudo echo "CLOUDINARY_CLOUD_NAME=${{secrets.CLOUDINARY_CLOUD_NAME}}" >> .env
            sudo echo "CLOUDINARY_API_KEY=${{secrets.CLOUDINARY_API_KEY}}" >> .env
            sudo echo "CLOUDINARY_API_SECRET=${{secrets.CLOUDINARY_API_SECRET}}" >> .env 
            sudo echo "DATABASE_URL=postgresql://${{secrets.DB_NAME_MENTA}}:${{secrets.DB_PASSWORD_MENTA}}@localhost:${{secrets.DB_PORT_MENTA}}/${{secrets.DB_NAME_MENTA}}?schema=public" >> .env 
            sudo echo "PORT=${{secrets.PORT_API_MENTA}}" >> .env 
            echo "Fin Variables en ENV"

            rm -r node_modules
            yarn install
            yarn run tsc
            pm2 restart api-menta


# yarn run migrate:deploy
# npx prisma migrate deploy  // Esto va antes de yarn install


# sudo rm -r html
# git clone https://github.com/Rey9530/api_administracion.git html && cd html 